name: "Release: Publish Artifacts"

on:
  push:
    branches: [ $default-branch ]

jobs:
  version:
    name: Get Next Version Number
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      next_release_version: ${{ steps.get-version.outputs.next_release_version }}
      next_release_published: ${{ steps.get-version.outputs.next_release_published }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Next Version Number
        id: get-version
        uses: brocksolutions/action-get-version@v1

  build-dotnet:
    if: ${{ needs.version.outputs.next_release_published == 'true' }}
    name: "Build .NET Artifacts"
    runs-on: windows-latest
    needs: [version]
    steps:
      - uses: actions/checkout@v4

      - name: Update Version Number
        uses: brocksolutions/action-set-version-dotnet@v1
        with:
          version: ${{ needs.version.outputs.next_release_version }}
                    
      - name: Build .NET App
        uses: brocksolutions/action-package-artifact@v2
        with:
          solution-file: YourSlnHere.sln
          project-name: YourProjectNameHere
          artifact-name: YourProjectNameHere-${{ needs.version.outputs.next_release_version }}=
          config-path: Path-to-config/Config
          database-path: Database/Flyway
          service-type: web
          
  build-app-container:
    if: ${{ needs.version.outputs.next_release_published == 'true' }}
    name: "Build Container"
    runs-on: ubuntu-latest
    needs: [version]
    permissions:
      actions: read
      contents: read
      packages: write
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Update Version Number
        uses: brocksolutions/action-set-version-dotnet@v1
        with:
          version: ${{ needs.version.outputs.next_release_version }}

      - name: Build and Push Container Image
        uses: brocksolutions/action-build-container@v3
        with:
          image-name: yourImageNameHere
          dockerfile-path: ./Dockerfile
          tags: |
            ${{ needs.version.outputs.next_release_version }}
          tag-latest: true
          push-to-registry: true

  build-flyway-container:
    if: ${{ needs.version.outputs.next_release_published == 'true' }}
    name: "Build Flyway Container"
    runs-on: ubuntu-latest
    needs: [version]
    permissions:
      actions: read
      contents: read
      packages: write
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Update Version Number
        uses: brocksolutions/action-set-version-dotnet@v1
        with:
          version: ${{ needs.version.outputs.next_release_version }}

      - name: Build and Push Flyway Container
        uses: brocksolutions/action-build-container@v3
        with:
          image-name: yourImageNameHere-flyway
          dockerfile-path: Database/Flyway/Dockerfile
          docker-context: Database/Flyway
          tags: |
            ${{ needs.version.outputs.next_release_version }}
          tag-latest: true
          push-to-registry: true

  publish-release:
    if: ${{ needs.version.outputs.next_release_published == 'true' }}
    name: "Publish Release on GitHub"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    needs: [build-app-container, build-flyway-container, build-dotnet, version]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: yourProjectNameHere-${{ needs.version.outputs.next_release_version }}
          path: ${{github.workspace}}/Artifact
      
      - name: Publish Release
        uses: brocksolutions/action-semantic-release@v1
